name: build

on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run tests
      run: cargo test --verbose

    - name: Install dependencies
      run: |
        sudo apt-get update
        rustup target add x86_64-unknown-linux-gnu
        rustup target add x86_64-apple-darwin

        mkdir dist
        mkdir builds

    - name: Build Linux
      run: |
        cargo rustc --release --target=x86_64-unknown-linux-gnu
        mkdir builds/ts_deplint-linux
        cp target/x86_64-unknown-linux-gnu/release/swp builds/ts_deplint-linux
        tar -C builds -czvf dist/ts_deplint-linux.tar.gz ts_deplint-linux

    - name: Cache Mac OS dependencies
      id: cache-macos
      uses: actions/cache@v3
      with:
        path: osxcross
        key: ${{ runner.os }}-osxcross

    - name: Install Mac OS dependencies
      if: steps.cache-macos.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/tpoechtrager/osxcross
        cd osxcross
        sudo tools/get_dependencies.sh
        wget -nc https://s3.dockerproject.org/darwin/v2/MacOSX10.10.sdk.tar.xz
        mv MacOSX10.10.sdk.tar.xz tarballs/
        UNATTENDED=yes OSX_VERSION_MIN=10.7 ./build.sh

    - name: Build Mac OS
      run: |
        export PATH="$(pwd)/osxcross/target/bin:$PATH"
        export LIBZ_SYS_STATIC=1
        export CC=o64-clang
        export CXX=o64-clang++
        cargo build --release --target "x86_64-apple-darwin"
        mkdir builds/ts_deplint-macos
        cp target/x86_64-apple-darwin/release/swp builds/ts_deplint-macos
        tar -C builds -czvf dist/ts_deplint-macos.tar.gz ts_deplint-macos

    - name: Upload release
      uses: softprops/action-gh-release@v1
      with:
        body_path: CHANGELOG.md
        files: |
          dist/ts_deplint-linux.tar.gz
          dist/ts_deplint-macos.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Publish npm package
    #   env:
    #     NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
    #   run: |
    #     echo "//registry.npmjs.org/:_authToken=$NPM_ACCESS_TOKEN" > ".npmrc"
    #     npm publish

    # - name: Publish cargo package
    #   env:
    #     CARGO_ACCESS_TOKEN: ${{ secrets.CARGO_ACCESS_TOKEN }}
    #   run: |
    #     cargo login "$CARGO_ACCESS_TOKEN"
    #     cargo publish
